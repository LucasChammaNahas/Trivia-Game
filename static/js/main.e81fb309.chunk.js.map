{"version":3,"sources":["services/localStorage.jsx","services/api.jsx","redux/actions/index.js","redux/reducers/player.jsx","redux/reducers/game.jsx","redux/reducers/index.jsx","redux/store/index.jsx","images/trivia.png","pages/Login.jsx","pages/Settings.jsx","components/Header.jsx","components/NextButton.jsx","components/Question.jsx","components/Timer.jsx","pages/Game.jsx","pages/Ranking.jsx","pages/Feedback.jsx","App/index.jsx","index.jsx"],"names":["localStorageInit","localStorage","getItem","save","JSON","stringify","setItem","loadTokenFromStorage","token","parse","saveTokenToStorage","fetchTokenFromApiAndSave","a","fetch","res","json","jsonRes","fetchQuestions","sets","expiredCode","cat","selectedCategory","dif","selectedDifficulty","typ","selectedType","endPoint","response_code","questions","results","forEach","question","window","atob","category","type","difficulty","correct_answer","incorrect_answers","length","getQuestions","settings","fetchGravatar","email","hash","md5","toString","gravatar","url","ADD_USER","DECREASE_TIME","INCREASE_SCORE","STOP_TIME","RESET_TIME","SAVE_AVATAR","INCREASE_ASSERTIONS","RESET_ASSERTIONS","SAVE_CATEGORIES","SAVE_SETTINGS","SAVE_TOKEN","CATEGORIES_URL","stopTime","resetTime","saveAvatar","avatar","saveToken","initialState","name","assertions","score","gravatarEmail","gravatarUrl","player","state","action","user","points","time","amount","categories","game","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","Login","props","btnDisable","onChangeHandler","bind","onClickHandler","tokenFetch","this","target","setState","value","add","history","playerState","avatarFetch","resetTimeAction","resetAssertionsAction","push","className","src","img","alt","htmlFor","id","placeholder","onChange","disabled","onClick","React","Component","connect","dispatch","addUser","console","log","fetchAvatar","Settings","categoriesFetch","settingsSave","map","request","response","trivia_categories","saveSettings","Header","userName","NextButton","nextQuestion","funct","resetStyles","Question","answers","correctBtnClass","incorrectBtnClass","answered","shuffleAnswers","checkAnswer","resetButtonStyles","savePlayerToStorage","savePoints","prevProps","isToStopTime","sort","Math","random","addPoints","stopTheTimer","timer","corretAnswer","indexOf","answer","isCorrect","increaseScore","intervals","Timer","updateTheTime","interval","setInterval","currentTime","descrease","stop","clearInterval","timerClassName","Game","isLoading","questionIndex","nextQ","then","ranking","arr","b","resetTimer","prevState","to","Ranking","element","index","Feedback","App","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e81fb309.chunk.js","sourcesContent":["export const localStorageInit = () => {\n  const ranking = localStorage.getItem('ranking');\n  if (!ranking) {\n    const emtpyArr = [];\n    const save = JSON.stringify(emtpyArr);\n    localStorage.setItem('ranking', save);\n  }\n};\n\nexport const loadTokenFromStorage = () => {\n  const token = JSON.parse(localStorage.getItem('token'));\n  if (!token) { return 'no token in storage'; }\n  return token;\n};\n\nexport const loadRankingFromStorage = () => {\n  const ranking = JSON.parse(localStorage.getItem('ranking'));\n  return ranking;\n};\n\nexport const saveTokenToStorage = (token) => {\n  const save = JSON.stringify(token);\n  localStorage.setItem('token', save);\n};\n","import md5 from 'crypto-js/md5';\nimport { loadTokenFromStorage, saveTokenToStorage } from './localStorage';\n\nconst END_POINT = 'https://opentdb.com/api.php?encode=base64&amount=5&token=';\nconst TOKEN_END_POINT = 'https://opentdb.com/api_token.php?command=request';\n\nexport const fetchTokenFromApiAndSave = async () => {\n  const res = await fetch(TOKEN_END_POINT);\n  const jsonRes = await res.json();\n  const { token } = jsonRes;\n  saveTokenToStorage(token);\n  return token;\n};\n\nconst fetchQuestions = async (token, sets) => {\n  const expiredCode = 3;\n  const { selectedCategory: cat, selectedDifficulty: dif, selectedType: typ } = sets;\n  const endPoint = `${END_POINT}${token}&category=${cat}&difficulty=${dif}&type=${typ}`;\n  const res = await fetch(endPoint);\n  const jsonRes = await res.json();\n  if (jsonRes.response_code === expiredCode) { return 'token expired'; }\n  const questions = jsonRes.results;\n  questions.forEach((question) => {\n    question.question = window.atob(question.question);\n    question.category = window.atob(question.category);\n    question.type = window.atob(question.type);\n    question.difficulty = window.atob(question.difficulty);\n    question.correct_answer = window.atob(question.correct_answer);\n    question.incorrect_answers[0] = window.atob(question.incorrect_answers[0]);\n    if (question.incorrect_answers.length > 1) {\n      question.incorrect_answers[1] = window.atob(question.incorrect_answers[1]);\n      question.incorrect_answers[2] = window.atob(question.incorrect_answers[2]);\n    }\n  });\n  return questions;\n};\n\nexport const getQuestions = async (settings) => {\n  let token = loadTokenFromStorage();\n  if (token === 'no token in storage') { token = await fetchTokenFromApiAndSave(); }\n  let questions = await fetchQuestions(token, settings);\n  if (questions === 'token expired') {\n    token = await fetchTokenFromApiAndSave();\n    questions = await await fetchQuestions(token);\n  }\n  return questions;\n};\n\nexport const fetchGravatar = async (email) => {\n  const hash = md5(email).toString();\n  const gravatar = await fetch(`https://www.gravatar.com/avatar/${hash}`);\n  return gravatar.url;\n};\n","import { fetchGravatar, fetchTokenFromApiAndSave } from '../../services/api';\n\nexport const ADD_USER = 'ADD_USER';\nexport const DECREASE_TIME = 'DECREASE_TIME';\nexport const INCREASE_SCORE = 'INCREASE_SCORE';\nexport const STOP_TIME = 'STOP_TIME';\nexport const RESET_TIME = 'RESET_TIME';\nexport const SAVE_AVATAR = 'SAVE_AVATAR';\nexport const INCREASE_ASSERTIONS = 'INCREASE_ASSERTIONS';\nexport const RESET_ASSERTIONS = 'RESET_ASSERTIONS';\nexport const SAVE_CATEGORIES = 'SAVE_CATEGORIES';\nexport const SAVE_SETTINGS = 'SAVE_SETTINGS';\nexport const SAVE_TOKEN = 'SAVE_TOKEN';\nexport const SAVE_QUESTIONS = 'SAVE_QUESTIONS';\n\nconst CATEGORIES_URL = 'https://opentdb.com/api_category.php';\n\nexport const addUser = (user) => (\n  {\n    type: ADD_USER,\n    user,\n  }\n);\n\nexport const decreaseTime = () => (\n  {\n    type: DECREASE_TIME,\n  }\n);\n\nexport const stopTime = () => (\n  {\n    type: STOP_TIME,\n  }\n);\n\nexport const resetTime = () => (\n  {\n    type: RESET_TIME,\n  }\n);\n\nexport const increaseScore = (points) => (\n  {\n    type: INCREASE_SCORE,\n    points,\n  }\n);\n\nexport const saveAvatar = (avatar) => (\n  {\n    type: SAVE_AVATAR,\n    avatar,\n  }\n);\n\nexport const correctAnswers = () => (\n  {\n    type: INCREASE_ASSERTIONS,\n  }\n);\n\nexport const resetAssertions = () => (\n  {\n    type: RESET_ASSERTIONS,\n  }\n);\n\nexport const fetchAvatar = (email) => async (dispatch) => {\n  try {\n    const avatar = await fetchGravatar(email);\n    dispatch(saveAvatar(avatar));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst actionCategories = (categories) => (\n  {\n    type: SAVE_CATEGORIES,\n    categories,\n  }\n);\n\nexport const fetchCategories = () => async (dispatch) => {\n  try {\n    const request = await fetch(CATEGORIES_URL);\n    const response = await request.json();\n    dispatch(actionCategories(response.trivia_categories));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst actionDifficulty = (categories) => (\n  {\n    type: SAVE_CATEGORIES,\n    categories,\n  }\n);\n\nexport const fetchDifficulty = () => async (dispatch) => {\n  try {\n    const request = await fetch(CATEGORIES_URL);\n    const response = await request.json();\n    dispatch(actionDifficulty(response.trivia_categories));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const saveSettings = (settings) => (\n  {\n    type: SAVE_SETTINGS,\n    settings,\n  }\n);\n\nexport const saveToken = (token) => (\n  {\n    type: SAVE_TOKEN,\n    token,\n  }\n);\n\nexport const fetchToken = () => async (dispatch) => {\n  try {\n    const token = await fetchTokenFromApiAndSave();\n    dispatch(saveToken(token));\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import {\n  ADD_USER,\n  INCREASE_SCORE,\n  SAVE_AVATAR,\n  INCREASE_ASSERTIONS,\n  RESET_ASSERTIONS,\n} from '../actions';\n\nconst initialState = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n  gravatarUrl: '',\n};\n\nconst player = (state = initialState, action) => {\n  switch (action.type) {\n  case ADD_USER:\n    return { ...state, name: action.user.name, gravatarEmail: action.user.email };\n  case INCREASE_SCORE:\n    return { ...state, score: state.score + action.points };\n  case INCREASE_ASSERTIONS:\n    return { ...state, assertions: state.assertions + 1 };\n  case SAVE_AVATAR:\n    return { ...state, gravatarUrl: action.avatar };\n  case RESET_ASSERTIONS:\n    return { ...state, assertions: 0, score: 0 };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import {\n  DECREASE_TIME,\n  STOP_TIME,\n  RESET_TIME,\n  SAVE_CATEGORIES,\n  SAVE_SETTINGS,\n  SAVE_TOKEN,\n} from '../actions';\n\nconst initialState = {\n  time: 30,\n  stopTime: false,\n  score: 0,\n  amount: 5,\n  token: '',\n  categories: [],\n  questions: [],\n  selectedCategory: '',\n  selectedDifficulty: '',\n  selectedType: '',\n};\n\nconst game = (state = initialState, action) => {\n  switch (action.type) {\n  case DECREASE_TIME:\n    return { ...state, time: state.time - 1 };\n  case STOP_TIME:\n    return { ...state, stopTime: true };\n  case RESET_TIME:\n    return { ...state, time: 30, stopTime: false };\n  case SAVE_CATEGORIES:\n    return { ...state, categories: action.categories };\n  case SAVE_SETTINGS:\n    return { ...state, ...action.settings };\n  case SAVE_TOKEN:\n    return { ...state, token: action.token };\n  default:\n    return state;\n  }\n};\n\nexport default game;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport player from './player';\nimport game from './game';\n\nconst rootReducer = combineReducers({ user, game, player });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/trivia.7e9181d3.png\";","import React from 'react';\nimport { func, shape, number, string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  addUser,\n  fetchAvatar,\n  resetTime,\n  resetAssertions,\n  fetchToken,\n} from '../redux/actions';\nimport './Login.css';\nimport img from '../images/trivia.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      name: '',\n      btnDisable: true,\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const { tokenFetch } = this.props;\n    tokenFetch();\n  }\n\n  onChangeHandler({ target }) {\n    this.setState({ [target.name]: target.value }, () => {\n      const { email, name } = this.state;\n      if (email.length && name.length) {\n        this.setState({ btnDisable: false });\n      } else {\n        this.setState({ btnDisable: true });\n      }\n    });\n  }\n\n  async onClickHandler() {\n    const {\n      add,\n      history,\n      playerState,\n      avatarFetch,\n      resetTimeAction,\n      resetAssertionsAction,\n    } = this.props;\n\n    const { email, name } = this.state;\n    await add({ email, name });\n    await avatarFetch(email);\n    localStorage.setItem('state', JSON.stringify({ player: playerState }));\n    history.push('/game');\n    resetTimeAction();\n    resetAssertionsAction();\n  }\n\n  render() {\n    const { email, name, btnDisable } = this.state;\n    const { history } = this.props;\n\n    return (\n      <div className=\"login\">\n        <div><img src={ img } alt=\"\" /></div>\n        <form>\n          <label htmlFor=\"email-input\">\n            <input\n              type=\"email\"\n              data-testid=\"input-gravatar-email\"\n              id=\"email-input\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={ email }\n              onChange={ this.onChangeHandler }\n            />\n          </label>\n          <label htmlFor=\"name-input\">\n            <input\n              type=\"name\"\n              data-testid=\"input-player-name\"\n              id=\"name-input\"\n              name=\"name\"\n              placeholder=\"Apelido\"\n              value={ name }\n              onChange={ this.onChangeHandler }\n            />\n          </label>\n          <input\n            className=\"jogar-btn\"\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ btnDisable }\n            value=\"Jogar\"\n            onClick={ this.onClickHandler }\n          />\n        </form>\n        <input\n          data-testid=\"btn-settings\"\n          type=\"button\"\n          value=\"Settings\"\n          onClick={ () => history.push('/settings') }\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  add: (user) => dispatch(addUser(user)),\n  avatarFetch: (email) => dispatch(fetchAvatar(email)),\n  tokenFetch: () => dispatch(fetchToken()),\n  resetTimeAction: () => dispatch(resetTime()),\n  resetAssertionsAction: () => dispatch(resetAssertions()),\n});\n\nconst mapStateToProps = (state) => ({\n  playerState: state.player,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  add: func.isRequired,\n  avatarFetch: func.isRequired,\n  tokenFetch: func.isRequired,\n  resetTimeAction: func.isRequired,\n  resetAssertionsAction: func.isRequired,\n  history: shape({\n    length: number,\n    action: string,\n    push: func,\n  }).isRequired,\n  playerState: shape({\n    name: string,\n    assertions: number,\n    score: number,\n    gravatarEmail: string,\n  }).isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, shape, number, string, arrayOf } from 'prop-types';\nimport { fetchCategories, saveSettings } from '../redux/actions';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCategory: '',\n      selectedDifficulty: '',\n      selectedType: '',\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const { categoriesFetch } = this.props;\n    categoriesFetch();\n  }\n\n  onChangeHandler({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  onClickHandler() {\n    const { settingsSave, history } = this.props;\n    settingsSave(this.state);\n    history.push('/');\n  }\n\n  render() {\n    const { selectedCategory, selectedDifficulty, selectedType } = this.state;\n    const { categories } = this.props;\n    return (\n      <div className=\"settings\">\n        <h1 data-testid=\"settings-title\">Settings</h1>\n        <form action=\"\">\n          <label htmlFor=\"selectedCategory-select\">\n            Category\n            <select\n              name=\"selectedCategory\"\n              id=\"selectedCategory-select\"\n              value={ selectedCategory }\n              onChange={ this.onChangeHandler }\n            >\n              {categories.map(({ id, name }) => (\n                <option key={ id } value={ id }>{name}</option>\n              ))}\n            </select>\n          </label>\n          <label htmlFor=\"selectedDifficulty-select\">\n            Difficulty\n            <select\n              name=\"selectedDifficulty\"\n              id=\"selectedDifficulty-select\"\n              value={ selectedDifficulty }\n              onChange={ this.onChangeHandler }\n            >\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </label>\n          <label htmlFor=\"selectedType-select\">\n            Type\n            <select\n              name=\"selectedType\"\n              id=\"selectedType-select\"\n              value={ selectedType }\n              onChange={ this.onChangeHandler }\n            >\n              <option value=\"multiple\">Multiple</option>\n              <option value=\"boolean\">Boolean</option>\n            </select>\n          </label>\n          <input type=\"button\" value=\"Save\" onClick={ this.onClickHandler } />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  categoriesFetch: () => dispatch(fetchCategories()),\n  settingsSave: (settings) => dispatch(saveSettings(settings)),\n});\n\nconst mapStateToProps = (state) => ({\n  categories: state.game.categories,\n});\n\nSettings.propTypes = {\n  categoriesFetch: func.isRequired,\n  settingsSave: func.isRequired,\n  categories: arrayOf(shape({\n    id: number,\n    name: string,\n  })).isRequired,\n  history: shape({\n    length: number,\n    action: string,\n    push: func,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    const { userName, score, gravatarUrl } = this.props;\n\n    return (\n      <header>\n        <div className=\"userInfo\">\n          <img\n            data-testid=\"header-profile-picture\"\n            className=\"avatar\"\n            src={ gravatarUrl }\n            alt=\"Icone do Avatar\"\n          />\n          <h2 data-testid=\"header-player-name\" className=\"userName\">\n            {`Jogador: ${userName}`}\n          </h2>\n        </div>\n        <div className=\"scoreBoard\">\n          <h4 data-testid=\"header-score\" className=\"score\">\n            {score}\n          </h4>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => (\n  {\n    userName: state.player.name,\n    score: state.player.score,\n    gravatarUrl: state.player.gravatarUrl,\n  }\n);\n\nexport default connect(mapStateToProps)(Header);\n\nHeader.propTypes = {\n  userName: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  gravatarUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { func } from 'prop-types';\nimport './NextButton.css';\n\nclass NextButton extends React.Component {\n  constructor() {\n    super();\n    this.nextQuestion = this.nextQuestion.bind(this);\n  }\n\n  nextQuestion() {\n    const { funct, resetStyles } = this.props;\n    funct();\n    resetStyles();\n  }\n\n  render() {\n    return (\n      <input\n        className=\"next-button\"\n        type=\"button\"\n        value=\"Próxima\"\n        data-testid=\"btn-next\"\n        onClick={ this.nextQuestion }\n      />\n    );\n  }\n}\n\nNextButton.propTypes = {\n  funct: func.isRequired,\n  resetStyles: func.isRequired,\n};\n\nexport default NextButton;\n","import React from 'react';\nimport { shape, string, arrayOf, number, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Question.css';\nimport NextButton from './NextButton';\nimport { localStorageInit } from '../services/localStorage';\nimport { stopTime, increaseScore, correctAnswers } from '../redux/actions';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      correctBtnClass: '',\n      incorrectBtnClass: '',\n      answered: false,\n    };\n    this.shuffleAnswers = this.shuffleAnswers.bind(this);\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.resetButtonStyles = this.resetButtonStyles.bind(this);\n    this.savePlayerToStorage = this.savePlayerToStorage.bind(this);\n    this.savePoints = this.savePoints.bind(this);\n  }\n\n  componentDidMount() {\n    const { playerState } = this.props;\n    this.shuffleAnswers();\n    localStorage.setItem('state', JSON.stringify({ player: playerState }));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { question, isToStopTime } = this.props;\n    const { answered } = this.state;\n    if (prevProps.question.correct_answer !== question.correct_answer) {\n      this.shuffleAnswers();\n    }\n    if (isToStopTime && !answered) {\n      this.checkAnswer({ target: { value: 'errado' } });\n    }\n  }\n\n  resetButtonStyles() {\n    this.setState({\n      correctBtnClass: '',\n      incorrectBtnClass: '',\n    });\n  }\n\n  shuffleAnswers() {\n    const { question } = this.props;\n    const answers = [...question.incorrect_answers, question.correct_answer];\n    const half = 0.5;\n    answers.sort(() => Math.random() - half);\n    this.setState({ answers, answered: false });\n  }\n\n  async savePoints(points) {\n    const { addPoints } = this.props;\n    await addPoints(points);\n    this.savePlayerToStorage();\n  }\n\n  savePlayerToStorage() {\n    const { playerState } = this.props;\n    localStorage.setItem('state', JSON.stringify({ player: playerState }));\n  }\n\n  checkAnswer({ target }) {\n    const { question, stopTheTimer, timer, corretAnswer } = this.props;\n    const { difficulty } = question;\n    const levels = ['easy', 'medium', 'hard'];\n    const ten = 10;\n    stopTheTimer();\n\n    if (target.value === question.correct_answer) {\n      const points = ten + (timer * (levels.indexOf(difficulty) + 1));\n      this.savePoints(points);\n      corretAnswer();\n    }\n\n    this.setState({\n      correctBtnClass: 'correct-btn',\n      incorrectBtnClass: 'incorrect-btn',\n      answered: true });\n  }\n\n  render() {\n    localStorageInit();\n    const { question, isToStopTime, funct } = this.props;\n    const { answers, correctBtnClass, incorrectBtnClass, answered } = this.state;\n\n    return (\n      <div className=\"question\">\n        <h3 data-testid=\"question-category\">{question.category}</h3>\n        <p data-testid=\"question-text\">{question.question}</p>\n        {answers.map((answer) => {\n          const isCorrect = answer === question.correct_answer;\n          return (\n            <input\n              key={ answer }\n              data-testid={\n                isCorrect\n                  ? 'correct-answer'\n                  : `wrong-answer-${question.incorrect_answers.indexOf(answer)}`\n              }\n              type=\"button\"\n              value={ answer }\n              className={ `answer ${isCorrect ? correctBtnClass : incorrectBtnClass}` }\n              onClick={ this.checkAnswer }\n              disabled={ isToStopTime }\n            />\n          );\n        })}\n        {\n          answered\n            ? <NextButton resetStyles={ this.resetButtonStyles } funct={ funct } />\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nQuestion.propTypes = {\n  question: shape({\n    category: string,\n    type: string,\n    difficulty: string,\n    question: string,\n    correct_answer: string,\n    incorrect_answers: arrayOf(string),\n  }).isRequired,\n  stopTheTimer: func.isRequired,\n  isToStopTime: bool.isRequired,\n  funct: func.isRequired,\n  timer: number.isRequired,\n  addPoints: func.isRequired,\n  corretAnswer: func.isRequired,\n  playerState: shape({\n    name: string,\n    assertions: number,\n    score: number,\n    gravatarEmail: string,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    stopTheTimer: () => dispatch(stopTime()),\n    addPoints: (points) => dispatch(increaseScore(points)),\n    corretAnswer: () => dispatch(correctAnswers()),\n  }\n);\n\nconst mapStateToProps = (state) => (\n  {\n    isToStopTime: state.game.stopTime,\n    timer: state.game.time,\n    playerState: state.player,\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Timer.css';\nimport { decreaseTime, stopTime } from '../redux/actions';\n\nconst ONE_SECOND = 1000;\nconst intervals = [];\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.updateTheTime = this.updateTheTime.bind(this);\n  }\n\n  componentDidMount() {\n    const interval = setInterval(this.updateTheTime, ONE_SECOND);\n    intervals.push(interval);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isToStopTime } = this.props;\n    if (prevProps.isToStopTime !== isToStopTime) {\n      const interval = setInterval(this.updateTheTime, ONE_SECOND);\n      intervals.push(interval);\n    }\n  }\n\n  updateTheTime() {\n    const { currentTime, isToStopTime, descrease, stop } = this.props;\n    if (currentTime === 0 || isToStopTime) {\n      stop();\n      intervals.forEach(clearInterval);\n    } else {\n      descrease();\n    }\n  }\n\n  timerClassName(currentTime) {\n    const ten = 10;\n    if (currentTime > ten) {\n      const className = currentTime % 2 === 0 ? 'timer timer-even' : 'timer timer-odd';\n      return className;\n    }\n    const className = currentTime % 2 === 0\n      ? 'timer timer-ten-sec-even'\n      : 'timer timer-ten-sec-odd';\n    return className;\n  }\n\n  render() {\n    const { currentTime } = this.props;\n\n    return (\n      <div className={ this.timerClassName(currentTime) }>\n        {`Tempo Restante: ${currentTime}`}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    descrease: () => dispatch(decreaseTime()),\n    stop: () => dispatch(stopTime()),\n  }\n);\n\nconst mapStateToProps = (state) => (\n  {\n    currentTime: state.game.time,\n    isToStopTime: state.game.stopTime,\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n\nTimer.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  isToStopTime: PropTypes.bool.isRequired,\n  descrease: PropTypes.func.isRequired,\n  stop: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { func, shape, string } from 'prop-types';\nimport { getQuestions } from '../services/api';\nimport { localStorageInit } from '../services/localStorage';\nimport { Header, Question, Timer } from '../components';\nimport { resetTime } from '../redux/actions';\n\nconst FIVE = 5;\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: null,\n      isLoading: true,\n      questionIndex: 0,\n    };\n    this.nextQ = this.nextQ.bind(this);\n  }\n\n  componentDidMount() {\n    const { settings } = this.props;\n    getQuestions(settings)\n      .then((questions) => this.setState({\n        questions,\n        isLoading: false,\n      }));\n  }\n\n  componentWillUnmount() {\n    localStorageInit();\n    const state = JSON.parse(localStorage.getItem('state'));\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    const arr = [...ranking, state];\n    arr.sort((a, b) => b.player.score - a.player.score);\n    const save = JSON.stringify(arr);\n    localStorage.setItem('ranking', save);\n  }\n\n  nextQ() {\n    const { resetTimer } = this.props;\n    this.setState((prevState) => ({\n      questionIndex: prevState.questionIndex + 1,\n    }));\n    resetTimer();\n  }\n\n  render() {\n    const { isLoading, questions, questionIndex } = this.state;\n\n    if (questionIndex === FIVE) {\n      return <Redirect to=\"/feedback\" />;\n    }\n\n    return (\n      <div>\n        <Header />\n        <Timer />\n        {\n          isLoading\n            ? <p>Loading...</p>\n            : <Question funct={ this.nextQ } question={ questions[questionIndex] } />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => (\n  {\n    question: state.game.questions,\n    settings: {\n      selectedCategory: state.game.selectedCategory,\n      selectedDifficulty: state.game.selectedDifficulty,\n      selectedType: state.game.selectedType,\n    },\n  }\n);\n\nconst mapDispatchToProps = (dispatch) => (\n  {\n    resetTimer: () => dispatch(resetTime()),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n\nGame.propTypes = {\n  resetTimer: func.isRequired,\n  settings: shape({\n    selectedCategory: string,\n    selectedDifficulty: string,\n    selectedType: string,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { loadRankingFromStorage } from '../services/localStorage';\nimport './Ranking.css';\n\nclass Ranking extends React.Component {\n  render() {\n    const ranking = loadRankingFromStorage();\n    return (\n      <div className=\"ranking\">\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        <ol>\n          {\n            ranking.map((element, index) => (\n              <li key={ index }>\n                <p>{`${index + 1}.`}</p>\n                <p\n                  className=\"ranking-mid\"\n                  data-testid={ `player-name-${index}` }\n                >\n                  {element.player.name}\n                </p>\n                <p data-testid={ `player-score-${index}` }>{element.player.score}</p>\n                <img src={ element.player.gravatarUrl } alt=\"Avatar\" />\n              </li>\n            ))\n          }\n        </ol>\n        <Link to=\"/\" data-testid=\"btn-go-home\">\n          <button type=\"button\">Tela inicial</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\nimport { shape, number } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport './Feedback.css';\n\nclass Feedback extends React.Component {\n  render() {\n    const { player: { assertions, score } } = this.props;\n    const threshold = 3;\n    return (\n      <>\n        <Header />\n        <section className=\"feedback\">\n          <h1 data-testid=\"feedback-text\">\n            { assertions >= threshold ? 'Mandou bem!' : 'Podia ser melhor...' }\n          </h1>\n          <p>\n            Você acertou\n            <span data-testid=\"feedback-total-question\">\n              {' '}\n              { assertions }\n              {' '}\n            </span>\n            { assertions === 1 ? 'questão' : 'questões' }\n          </p>\n          <p>\n            Um total de\n            <span data-testid=\"feedback-total-score\">\n              {' '}\n              {score}\n              {' '}\n            </span>\n            pontos.\n          </p>\n          <div>\n            <Link to=\"/ranking\">\n              <button type=\"button\" data-testid=\"btn-ranking\">\n                Ver Ranking\n              </button>\n            </Link>\n            <Link to=\"/\">\n              <button type=\"button\" data-testid=\"btn-play-again\">\n                Jogar Novamente\n              </button>\n            </Link>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n});\n\nexport default connect(mapStateToProps, null)(Feedback);\n\nFeedback.propTypes = {\n  player: shape({\n    assertions: number,\n    score: number,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  Login,\n  Game,\n  Settings,\n  Ranking,\n  Feedback,\n} from '../pages';\nimport { localStorageInit } from '../services/localStorage';\nimport './App.css';\n\nexport default class App extends React.Component {\n  render() {\n    localStorageInit();\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/settings\"\n          render={ (props) => <Settings { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={ (props) => <Login { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/game\"\n          render={ (props) => <Game { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/ranking\"\n          render={ (props) => <Ranking { ...props } /> }\n        />\n        <Route\n          exact\n          path=\"/feedback\"\n          render={ (props) => <Feedback { ...props } /> }\n        />\n        {/* <Route render={ (props) => <NotFound { ...props } /> } /> */}\n      </Switch>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'; // REDUX\nimport { HashRouter as BrowserRouter } from 'react-router-dom';\nimport store from './redux/store'; // REDUX\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}